{"version":3,"sources":["../../src/pages/people/people.module.ts","../../src/pages/people/people.ts"],"names":[],"mappings":"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","file":"40.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ComponentsModule } from '../../components/components.module'\r\nimport { PipesModule } from '../../pipes/pipes.modules'\r\n\r\nimport { PeoplePage } from './people';\r\nimport { PeopleProvider } from '../../providers/people';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PeoplePage\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(PeoplePage),\r\n    TranslateModule,\r\n    ComponentsModule,\r\n    PipesModule\r\n  ],\r\n  providers: [\r\n    PeopleProvider\r\n  ]\r\n})\r\nexport class PeoplePageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/people/people.module.ts","import { Component, OnInit } from '@angular/core';\r\nimport { InfiniteScroll, IonicPage } from 'ionic-angular';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/finally';\r\n\r\nimport { AuthenticationProvider } from '../../providers/authentication';\r\nimport { PeopleProvider } from '../../providers/people';\r\n\r\n@IonicPage({\r\n  name: 'page-people'\r\n})\r\n\r\n@Component({\r\n  selector: 'page-people',\r\n  templateUrl: 'people.html',\r\n})\r\n\r\nexport class PeoplePage implements OnInit {\r\n  private page = 0;\r\n  private cachePeople = [];\r\n  private firstPage = [];\r\n  peopleFilter: string = 'all-people';\r\n  people = [];\r\n  friends = [];\r\n  isLoadingAll: boolean = false;\r\n  isLoadingMy: boolean = false;\r\n  isLoadingSearch: boolean = false;\r\n\r\n  constructor (\r\n    private peopleProvider: PeopleProvider,\r\n    private authenticationProvider: AuthenticationProvider\r\n  ) { }\r\n\r\n  ngOnInit () {\r\n    this.doInfinite();\r\n    this.myConnections();\r\n  }\r\n\r\n  /**\r\n   * This will increment this.page number\r\n   * and fetch the page\r\n   * @param infiniteScroll (Optional) \r\n   */\r\n  doInfinite (infiniteScroll?: InfiniteScroll) {\r\n    if (this.people.length > 0 && this.people.length < 15 && infiniteScroll) {\r\n      infiniteScroll.enable(false);\r\n    }\r\n    if (!infiniteScroll) {\r\n      this.isLoadingAll = true;\r\n    }\r\n    this.page++;\r\n    this.getPeople()\r\n      .finally(() => {\r\n        if (infiniteScroll) {\r\n          infiniteScroll.complete();\r\n        }\r\n        this.isLoadingAll = false;\r\n      })\r\n      .do((response: any) => {\r\n        if (!response.ResponseData.length && infiniteScroll) {\r\n          infiniteScroll.enable(false);\r\n        }\r\n      })\r\n      .subscribe(res => {\r\n        this.handlePeoples(res);\r\n        if (infiniteScroll && res.ResponseData.length < 15){\r\n          infiniteScroll.enable(false);\r\n        }\r\n        if(!infiniteScroll) {\r\n          this.firstPage = res.ResponseData;\r\n        }\r\n        }, err => {\r\n          if (infiniteScroll) {\r\n            infiniteScroll.enable(false)\r\n          }\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Search Peoples\r\n   * This will create a copy of the peoples, so that we dont have to fetch users again, when search is cancelled\r\n   * When search is cancelled, replace with cached copy of the users.\r\n   * @param searchText Text to search\r\n   */\r\n  search(searchText) {\r\n    if (searchText) {\r\n      this.isLoadingSearch = true;\r\n      this.getPeople(searchText)\r\n      .finally(() => this.isLoadingSearch = false)\r\n        .subscribe((response: any) => {\r\n          if (!this.cachePeople.length) {\r\n            this.cachePeople = [].concat(this.people);\r\n          }\r\n          this.people = response.ResponseData;\r\n        }, err => {\r\n          this.people = [];\r\n        })\r\n    } else {\r\n      this.people = [].concat(this.cachePeople);\r\n    }\r\n  }\r\n\r\n  refreshPeople(){\r\n    this.page = 1;\r\n    this.people = this.firstPage;\r\n  }\r\n\r\n  /**\r\n   * concat response to people's array\r\n   * @param response API Response\r\n   */\r\n  private handlePeoples(response) {\r\n    this.people = this.people.concat(response.ResponseData);\r\n  }\r\n\r\n  /**\r\n   * Fetch API for peoples\r\n   * @param searchText provide searchText\r\n   */\r\n  private getPeople(searchText?: string) {\r\n    return this.peopleProvider.getPeople(searchText, this.page);\r\n  }\r\n\r\n  myConnections() {\r\n    this.isLoadingMy = true;\r\n\r\n    const subs = this.authenticationProvider.user$\r\n      .filter(user => user !== null)\r\n      .map(user => user.UserID)\r\n      .switchMap(id => this.peopleProvider.getUserConnections(id))\r\n      .do(() => this.isLoadingMy = false)\r\n      .subscribe(response => {\r\n        if (response.ResponseData) {\r\n          this.friends = response.ResponseData;\r\n        }\r\n        subs.unsubscribe();\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/people/people.ts"],"sourceRoot":""}