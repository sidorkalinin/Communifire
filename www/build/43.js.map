{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"43.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { LoginPage } from './login';\r\nimport { ComponentsModule } from '../../components/components.module';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { PipesModule } from '../../pipes/pipes.modules'\r\nimport { Push } from '@ionic-native/push';\r\nimport { NotificationHelper } from '../../util/notification-helper';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n    TranslateModule,\r\n    ComponentsModule,\r\n    PipesModule\r\n  ],\r\n  providers: [\r\n    SplashScreen,\r\n    Push,\r\n    NotificationHelper,\r\n  ]\r\n})\r\nexport class LoginPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, ViewChild } from '@angular/core';\r\nimport { Nav, IonicPage, NavController, ToastController, MenuController, Platform } from 'ionic-angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport 'rxjs/add/operator/finally';\r\nimport 'rxjs/add/operator/do';\r\nimport { Events } from 'ionic-angular';\r\nimport { AuthenticationProvider } from '../../providers/authentication';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n// import { NotificationHelper } from '../../util/notification-helper';\r\n\r\n@IonicPage({\r\n  name: 'login'\r\n})\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class LoginPage implements OnInit, OnDestroy {\r\n  @ViewChild(Nav) nav: Nav;\r\n  loginForm: FormGroup;\r\n  urlForm: FormGroup;\r\n  loginInProgress: boolean;\r\n  domainCheckInProgress: boolean;\r\n  isSamlEnabled: boolean;\r\n  subs$: Subscription[] = [];\r\n  translationText = ['LOGIN.SUCCESS', 'LOGIN.INVALID_INFO', 'LOGIN.INVALID_CREDENTIALS', 'LOGIN.URL_NOT_FOUND', 'LOGIN.COMMUNITY_URL', 'LOGIN.SERVER_ERROR'];\r\n  urlSet: boolean = false;\r\n  private activeDirectoryAuthEnabled = false;\r\n  isDomainCheck401: boolean = false;\r\n\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    private formBuilder: FormBuilder,\r\n    private authenticationProvider: AuthenticationProvider,\r\n    private toastCtrl: ToastController,\r\n    public menu: MenuController,\r\n    private translate: TranslateService,\r\n    private platform: Platform,\r\n    public events: Events,\r\n    splashScreen: SplashScreen,\r\n    statusBar: StatusBar,\r\n    // private notificationHelper: NotificationHelper,\r\n  ) {\r\n    this.platform.ready().then(() => {\r\n      // statusBar.styleLightContent();\r\n      splashScreen.hide();\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    /**\r\n     * Setup Login Form\r\n     */\r\n    this.loginForm = this.formBuilder.group({\r\n      UserName: ['', Validators.required],\r\n      Password: ['', Validators.required]\r\n    });\r\n\r\n    /**\r\n     * Setup Url Form\r\n     */\r\n    this.urlForm = this.formBuilder.group({\r\n      domain: ['', Validators.compose([Validators.required])]\r\n    });\r\n\r\n\r\n    /**\r\n     * Get all translations for messages.\r\n     */\r\n    this.translationText.map(translate => {\r\n      this.subs$.push(\r\n        this.translate.get(translate).subscribe((res: string) => {\r\n          this.translationText[translate] = res;\r\n        })\r\n      );\r\n    });\r\n\r\n\r\n    /**\r\n     * Set community url, if a previously set community url is entered.\r\n     */\r\n    const community_url = localStorage.getItem('community_url');\r\n    if (community_url) {\r\n      this.urlForm.get('domain').setValue(community_url);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from all Observables on route exit.\r\n   */\r\n  ngOnDestroy() {\r\n    this.subs$.forEach(sub => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Allow entering to this route only if\r\n   * token is not available, else disable Side Menu\r\n   */\r\n  ionViewCanEnter() {\r\n    this.menu.enable(false, 'authenticated');\r\n  }\r\n\r\n  loginWithAD() {\r\n    let self = this;\r\n\r\n    // // this.presentToast('Login with AD Clicked.');\r\n    if (!self.activeDirectoryAuthEnabled) {\r\n      console.log('activeDirectoryAuthEnabled: ' + self.activeDirectoryAuthEnabled);\r\n\r\n      // Pass ActiveDirectoryAuthEnabled variable value which we fetched from server to saml login page.\r\n      this.navCtrl.push('saml-login',\r\n        {\r\n          activeDirectoryAuthEnabled: self.activeDirectoryAuthEnabled\r\n        });\r\n      self.setDomainCheckInProgress(false);\r\n    }\r\n\r\n    // Let user add domain/credentials\r\n    self.urlSet = true;\r\n  }\r\n\r\n  login() {\r\n    let self = this;\r\n\r\n    if (this.loginForm.valid) {\r\n\r\n      var username = this.loginForm.value.UserName;\r\n\r\n      if (username.indexOf('/') > 0) {\r\n        // AD case, iPhones do now allow backslash in textbox for username so user will be adding usernames like:\r\n        // adqa.communifire.com/adtesting and the following code will make it adqa.communifire.com\\adtesting\r\n        username = username.replace('/', '\\\\');\r\n      }\r\n      var password = this.loginForm.value.Password;\r\n\r\n      this.authenticationProvider.setUserName(username);\r\n      this.authenticationProvider.setPassword(password);\r\n\r\n      this.setLoginInProgress(true);\r\n\r\n      const payload = {\r\n        UserName: username,\r\n        Password: password\r\n      };\r\n\r\n      this.authenticationProvider\r\n        .login(payload)\r\n        .subscribe(function (loginRes) {\r\n          self.onLoginSuccess(loginRes, self)\r\n        }, function (err) {\r\n          console.log('Error: ' + err);\r\n          self.presentToast(err);\r\n          self.onLoginError(self);\r\n          self.setLoginInProgress(false);\r\n        });\r\n\r\n    } else {\r\n      console.log('Error2');\r\n      self.setLoginInProgress(false);\r\n      this.presentToast(this.translationText['LOGIN.INVALID_INFO']);\r\n    }\r\n  }\r\n\r\n  backToUrl() {\r\n    this.urlSet = false;\r\n    this.loginForm.setValue({\r\n      UserName: \"\",\r\n      Password: \"\"\r\n    });\r\n    // this.loginForm.value.Password = \"\";\r\n  }\r\n\r\n  /**\r\n   * Check if the URL entered is correct\r\n   * @param domain Community URL\r\n   */\r\n  checkIfDomainExists() {\r\n    let self = this;\r\n    self.isDomainCheck401 = false;\r\n    \r\n    this.setDomainCheckInProgress(true);\r\n    self.urlSet = false;\r\n    var domain: string = this.urlForm.get('domain').value.trim();\r\n\r\n    if (domain.length == 0) {\r\n      this.setDomainCheckInProgress(false);\r\n      this.presentToast(this.translationText['LOGIN.COMMUNITY_URL']);\r\n      return;\r\n    }\r\n\r\n    // Add https if it is missing in front of domain added by user\r\n    if (domain.indexOf('http://') === -1 && domain.indexOf('https://') === -1) {\r\n      domain = 'https://' + domain;\r\n    }\r\n    // Remove \"/\" from the end of the domain if added by the user\r\n    let lastChar = domain.slice(-1);\r\n    if (lastChar == \"/\") {\r\n      domain = domain.replace(/.$/, \"\");  // replace last char \"/\" with empty space\r\n    }\r\n    console.log('Firing this.imageExists, domain: ' + domain);\r\n    // Validity of url is checked by checking whether https://${domain}/ping-do-not-delete.ico file exists \r\n    // If it does exist then the url is valid else not.\r\n    // Show user \"login url not found\" message if the url is not valid.\r\n    this.imageExists(domain + '/ping-do-not-delete.ico', (exists) => {\r\n\r\n      if (exists) {\r\n        //self.authenticationProvider.removeAdEnabled();\r\n\r\n        localStorage.setItem('community_url', domain);\r\n\r\n        console.log('this.imageExists success');\r\n        // Check for saml\r\n        // If enabled, show the login with saml button.\r\n        // If auto login with saml is enabled then directly redirect the user to login with saml page in the app\r\n        this.authenticationProvider.getSAMLDetails().subscribe(\r\n          response => {\r\n            // let samlDetails: any;\r\n            // samlDetails = {};\r\n            // samlDetails.IsSAMLEnabled = true;\r\n            // samlDetails.IsAutoLoginEnabled = true;\r\n            console.log(response);\r\n\r\n            var samlDetails = response.ResponseData;\r\n\r\n            // Set the ActiveDirectoryAuthEnabled variable to pass it to saml login page \r\n            // self.activeDirectoryAuthEnabled = samlDetails.ActiveDirectoryAuthEnabled;\r\n\r\n            if (samlDetails.IsSAMLEnabled) {\r\n              if (samlDetails.IsAutoLoginEnabled) {\r\n                self.loginWithAD();\r\n              }\r\n              else {\r\n                self.setIsSamlEnabled(true);\r\n              }\r\n            }\r\n            self.setDomainCheckInProgress(false);\r\n            self.setLoginInProgress(false);\r\n            self.urlSet = true;\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            self.setDomainCheckInProgress(false);\r\n          });\r\n\r\n      } else {\r\n        console.log('this.imageExists failure');\r\n        console.log('isDomainCheck401: ' + self.isDomainCheck401);\r\n\r\n        // At this point we were not able to fetch image that means either it is 401 or 404.\r\n        if (self.isDomainCheck401) {\r\n          //  We got 404 that means AD is enabled\r\n\r\n          // Active Directory case:\r\n          localStorage.setItem('community_url', domain);\r\n\r\n          self.activeDirectoryAuthEnabled = true;\r\n          self.authenticationProvider.setADEnabled();\r\n          self.loginWithAD();\r\n          self.setDomainCheckInProgress(false);\r\n        }\r\n        else {\r\n          this.presentToast(this.translationText['LOGIN.URL_NOT_FOUND']);\r\n          self.setDomainCheckInProgress(false);\r\n        }\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Present Ionic Toast to user.\r\n   * @param msg Message to display in Ionic Toast\r\n   */\r\n  private presentToast(msg) {\r\n    let toast = this.toastCtrl.create({\r\n      message: msg,\r\n      duration: 3000,\r\n      position: 'bottom'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  /**\r\n   * Check if an image exists.\r\n   * @param url String - Image Url\r\n   * @param callback Function\r\n   */\r\n  private imageExists(url: string, callback: Function) {\r\n    var self = this;\r\n    \r\n    var http = new XMLHttpRequest();\r\n    http.open('GET', url, true); // True is for async\r\n    http.send();\r\n    http.onreadystatechange = function () {\r\n      if (http.readyState === 4) {   //if complete\r\n\r\n        console.log('http.status: ' + http.status);\r\n\r\n        if (http.status == 401) {\r\n          self.isDomainCheck401 = true;\r\n          callback(false);\r\n        }\r\n        else if (http.status == 200) {\r\n          callback(true);\r\n        }\r\n        else {\r\n          callback(false);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private setLoginInProgress(isInProgress: boolean) {\r\n    this.loginInProgress = isInProgress;\r\n  }\r\n\r\n  private setDomainCheckInProgress(isInProgress: boolean) {\r\n    this.domainCheckInProgress = isInProgress;\r\n  }\r\n\r\n  private setIsSamlEnabled(isSamlEnabled: boolean) {\r\n    this.isSamlEnabled = isSamlEnabled;\r\n  }\r\n\r\n  private onLoginSuccess(loginRes: any, self: LoginPage) {\r\n    if (loginRes.ResponseData) {\r\n      self.authenticationProvider.setToken(loginRes.ResponseData);\r\n\r\n      // Wait till user details are fetched\r\n      // We can wait on user$ object which is an Observable\r\n      self.authenticationProvider.getMyDetails().subscribe(\r\n        user => {\r\n          self.setLoginInProgress(false);\r\n\r\n          self.presentToast(self.translationText['LOGIN.LOGIN_SUCCESS']);\r\n\r\n          self.authenticationProvider.setUser(user);\r\n          localStorage.setItem('UserID', user.UserID);\r\n\r\n          self.events.publish('user:loggedin', user);\r\n\r\n          if (this.platform.is('cordova')) {\r\n            console.log(this.nav);\r\n            // this.notificationHelper.initPushNotification(this.nav);\r\n            if (this.platform.is('ios') || this.platform.is('android')) {\r\n              var deviceToken = this.authenticationProvider.getDeviceToken();\r\n\r\n              if (deviceToken != null) {\r\n                this.authenticationProvider.sendDeviceTokenToServer(this.authenticationProvider.getDeviceToken())\r\n                  .subscribe(deviceTokenResponse => {\r\n                    if (deviceTokenResponse.ResponseData) {\r\n                      console.log(\"response of device token request: \" + deviceTokenResponse.ResponseData);\r\n                    } else {\r\n                      this.presentToast(this.translationText['LOGIN.INVALID_CREDENTIALS']);\r\n                    }\r\n                  });\r\n              }\r\n            }\r\n          }\r\n\r\n          self.navCtrl.setRoot('page-my-account', { type: \"activity\" });\r\n\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          self.setLoginInProgress(false);\r\n          self.presentToast(this.translationText['LOGIN.INVALID_CREDENTIALS']);\r\n        }\r\n      );\r\n\r\n    } else {\r\n      // self.loginInProgress = false;\r\n      self.setLoginInProgress(false);\r\n      self.presentToast(this.translationText['LOGIN.INVALID_CREDENTIALS']);\r\n    }\r\n  }\r\n\r\n  private onLoginError(self: LoginPage) {\r\n    self.setLoginInProgress(false);\r\n    self.presentToast(self.translationText['LOGIN.SERVER_ERROR']);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}