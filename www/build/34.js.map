{"version":3,"sources":["../../src/pages/saml-login/saml-login.module.ts","../../src/pages/saml-login/saml-login.ts"],"names":[],"mappings":"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","file":"34.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SamlLoginPage } from './saml-login';\r\nimport { PipesModule } from '../../pipes/pipes.modules'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SamlLoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(SamlLoginPage),\r\n    TranslateModule,\r\n    PipesModule\r\n  ],\r\n})\r\nexport class SamlLoginPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/saml-login/saml-login.module.ts","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { IonicPage, NavController, ToastController, Events, Nav, NavParams } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { InAppBrowser } from '@ionic-native/in-app-browser';\r\nimport { AuthenticationProvider } from '../../providers/authentication';\r\nimport { Platform } from 'ionic-angular';\r\nimport 'rxjs/add/operator/finally';\r\nimport 'rxjs/add/operator/do';\r\nimport { LocalStorageHelper } from '../../util/localStorage-helper'\r\nimport { Utilities } from '../../util/utilities'\r\n\r\n/**\r\n * Generated class for the SamlLoginPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n@IonicPage({\r\n  name: 'saml-login'\r\n})\r\n\r\n@Component({\r\n  selector: 'page-saml-login',\r\n  templateUrl: 'saml-login.html',\r\n})\r\nexport class SamlLoginPage implements OnInit, OnDestroy {\r\n  @ViewChild(Nav) nav: Nav;\r\n  translationText = ['LOGIN.ACTIVE_DIRECTORY_LOGIN'];\r\n  subs$: Subscription[] = [];\r\n  private activeDirectoryAuthEnabled;\r\n\r\n  constructor(\r\n    private authenticationProvider: AuthenticationProvider,\r\n    private translate: TranslateService,\r\n    private iab: InAppBrowser,\r\n    private platform: Platform,\r\n    private toastCtrl: ToastController,\r\n    public events: Events,\r\n    public navCtrl: NavController,\r\n    private localStorageHelper: LocalStorageHelper,\r\n    private utilities: Utilities,\r\n    public navParams: NavParams\r\n  ) {\r\n\r\n    let self = this;\r\n    self.activeDirectoryAuthEnabled = navParams.get(\"activeDirectoryAuthEnabled\");\r\n\r\n    console.log('activeDirectoryAuthEnabled from navParams: ' + self.activeDirectoryAuthEnabled);\r\n\r\n    if (self.authenticationProvider.getToken()) {\r\n\r\n      self.nav.setRoot('page-my-account', { type: \"activity\" });\r\n\r\n    } else {\r\n      platform.ready().then(() => {\r\n        console.log('Opening url.')\r\n\r\n        setTimeout(() => {\r\n          var browser = this.openUrl('no');//3\r\n\r\n          browser.on('loadstop').subscribe(event => {\r\n            console.log('LoadStartFired.')\r\n\r\n            //self.presentToast('Load started');\r\n            console.log(event.url);\r\n            //self.presentToast(event.url);\r\n\r\n            var token = utilities.getQueryString('Rest-Api-Key', event.url);\r\n\r\n            // Check if token is not empty\r\n            if (token) {\r\n\r\n              // Token will be sent a url encoded from server\r\n              token = decodeURIComponent(token);\r\n              console.log('Decoded token: ' + token);\r\n\r\n              console.log('Rest Api Key fetched from url: ' + token);\r\n\r\n              self.authenticationProvider.setToken(token);\r\n              console.log('Rest Api Key saved from remote: ' + self.authenticationProvider.getToken());\r\n\r\n              self.authenticationProvider.getMyDetails()\r\n\r\n              // Wait till user details are fetched\r\n              // We can wait on user$ object which is an Observable\r\n              self.authenticationProvider.getMyDetails().subscribe(\r\n                user => {\r\n                  // self.setLoginInProgress(false);\r\n\r\n                  console.log('User details fetched from self.authenticationProvider.getMyDetails()');\r\n                  utilities.presentToast(self.toastCtrl, self.translationText['LOGIN.LOGIN_SUCCESS']);\r\n\r\n                  self.authenticationProvider.setUser(user);\r\n\r\n                  self.sendDeviceTokenToServer();\r\n\r\n                  self.events.publish('user:loggedin', user);\r\n\r\n                  self.navCtrl.setRoot('login');\r\n\r\n                  browser.close();\r\n\r\n                  // browser.close();\r\n                  window.location.reload();\r\n\r\n                },\r\n                error => {\r\n                  console.log(error);\r\n                  //self.setLoginInProgress(false);\r\n                  //self.presentToast(this.translationText['LOGIN.INVALID_CREDENTIALS']);\r\n                  //self.navCtrl.setRoot('login');\r\n                });\r\n            }\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n * Present Ionic Toast to user.\r\n * @param msg Message to display in Ionic Toast\r\n */\r\n  private presentToast(msg) {\r\n    let toast = this.toastCtrl.create({\r\n      message: msg,\r\n      duration: 3000,\r\n      position: 'bottom'\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n\r\n  private sendDeviceTokenToServer() {\r\n\r\n    this.authenticationProvider.sendDeviceTokenToServer(this.authenticationProvider.getDeviceToken())\r\n      .subscribe(deviceTokenResponse => {\r\n        if (deviceTokenResponse.ResponseData) {\r\n          console.log(\"Response of device token request: \" + deviceTokenResponse.ResponseData);\r\n        } else {\r\n          this.utilities.presentToast(this.toastCtrl, this.translationText['LOGIN.SERVER_ERROR']);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  openUrl(hidden) {\r\n\r\n    const community_url = this.localStorageHelper.getCommunityUrl();\r\n\r\n\r\n    // isMobile=true querystring added to let the web application know about that the request is from mobile.\r\n    var url = community_url + '/ssologin?isMobile=true';\r\n    if (this.activeDirectoryAuthEnabled) {\r\n      // If Active Directory auth is enabled then we will authenticate against AD login on server instead of SAML\r\n      // The ActiveDirectoryAuthEnabled paramter is sent to server to tell the server that AD login needs to be used instead of SAML for authenticating this request.\r\n      url = url + '&ActiveDirectoryAuthEnabled=true';\r\n    }\r\n\r\n    console.log('Opening url in app browser: ' + url);\r\n    // set location: no to hide the url\r\n    // set toolbar: yes to show \"Done\", \"back\" button of inapp browser\r\n    // target: _blank to let the content of inapp browser visible.\r\n    const browser = this.iab.create(url, '_blank', { location: 'no', toolbar: 'yes', hidden: hidden });\r\n\r\n    return browser;\r\n  }\r\n\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad SamlLoginPage');\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    /**\r\n     * Get all translations for messages.\r\n     */\r\n    this.translationText.map(translate => {\r\n      this.subs$.push(\r\n        this.translate.get(translate).subscribe((res: string) => {\r\n          this.translationText[translate] = res;\r\n        })\r\n      );\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n * Unsubscribe from all Observables on route exit.\r\n */\r\n  ngOnDestroy() {\r\n    this.subs$.forEach(sub => {\r\n      sub.unsubscribe();\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/saml-login/saml-login.ts"],"sourceRoot":""}